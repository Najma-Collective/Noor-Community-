{
  "multiple-choice": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>C1 Checkpoint Â· Climate Solutions Sprint</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>C1 Checkpoint Â· Climate Solutions Sprint</h1>\n      <p class=\"instructions\">Skim the scenario pill, read the prompt badge, then tap the best response before revealing the feedback card.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Learners earn a progress badge for each prompt answered correctly. Discuss any uncertain items before advancing.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"mc-activity\">\n        \n          <section class=\"mc-question\" data-question-index=\"0\" data-explanation=\"Distributed solar kits create an immediate, measurable reduction in emissions while modelling learner agency.\">\n            <h3 class=\"mc-question-title\">Which action best represents a low-cost, high-impact climate solution we could prototype this term?</h3>\n            <div class=\"mc-options\" role=\"group\" aria-label=\"Which action best represents a low-cost, high-impact climate solution we could prototype this term?\">\n              \n              <label class=\"mc-option\" data-correct=\"true\">\n                <input type=\"radio\" name=\"question-0\" value=\"0\" required />\n                <span>Installing rooftop solar starter kits across the neighbourhood hub</span>\n              </label>\n            \n              <label class=\"mc-option\" data-correct=\"false\">\n                <input type=\"radio\" name=\"question-0\" value=\"1\" required />\n                <span>Hosting weekly awareness assemblies in the auditorium</span>\n              </label>\n            \n              <label class=\"mc-option\" data-correct=\"false\">\n                <input type=\"radio\" name=\"question-0\" value=\"2\" required />\n                <span>Publishing a quarterly sustainability report for stakeholders</span>\n              </label>\n            \n              <label class=\"mc-option\" data-correct=\"false\">\n                <input type=\"radio\" name=\"question-0\" value=\"3\" required />\n                <span>Planting decorative palms around the entrance plaza</span>\n              </label>\n            \n            </div>\n          </section>\n        \n          <section class=\"mc-question\" data-question-index=\"1\" data-explanation=\"The infographic highlights measurable gains, so we surface the Impact badge rather than narrative or testimonial cues.\">\n            <h3 class=\"mc-question-title\">Which data badge should pair with the infographic on Slide 4 of this deck?</h3>\n            <div class=\"mc-options\" role=\"group\" aria-label=\"Which data badge should pair with the infographic on Slide 4 of this deck?\">\n              \n              <label class=\"mc-option\" data-correct=\"true\">\n                <input type=\"radio\" name=\"question-1\" value=\"0\" required />\n                <span>Impact badge Â· compares baseline and post-project metrics</span>\n              </label>\n            \n              <label class=\"mc-option\" data-correct=\"false\">\n                <input type=\"radio\" name=\"question-1\" value=\"1\" required />\n                <span>People badge Â· lifts a learner testimonial or quote</span>\n              </label>\n            \n              <label class=\"mc-option\" data-correct=\"false\">\n                <input type=\"radio\" name=\"question-1\" value=\"2\" required />\n                <span>Story badge Â· cues the narrative hook for the showcase</span>\n              </label>\n            \n            </div>\n          </section>\n        \n        <div class=\"activity-actions\">\n          <button id=\"mc-check\" class=\"activity-btn\">Check answers</button>\n          <button id=\"mc-reset\" class=\"activity-btn secondary\">Reset</button>\n        </div>\n        <aside id=\"mc-feedback\" class=\"mc-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"mc-score\"></p>\n          <div id=\"mc-details\"></div>\n          <button id=\"mc-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const toArray = (nodeList) => Array.prototype.slice.call(nodeList);\n          const questions = toArray(document.querySelectorAll('.mc-question'));\n          const checkBtn = document.getElementById('mc-check');\n          const resetBtn = document.getElementById('mc-reset');\n          const feedback = document.getElementById('mc-feedback');\n          const scoreLine = document.getElementById('mc-score');\n          const details = document.getElementById('mc-details');\n          const closeBtn = document.getElementById('mc-close');\n\n          const evaluate = () => {\n            let correctCount = 0;\n            let totalCount = questions.length;\n            details.innerHTML = '';\n\n            questions.forEach((question, index) => {\n              const options = toArray(question.querySelectorAll('.mc-option'));\n              const expected = options.filter((opt) => opt.dataset.correct === 'true').map((opt) => options.indexOf(opt));\n              const selected = options\n                .map((opt, idx) => ({ opt, idx }))\n                .filter(({ opt }) => opt.querySelector('input').checked)\n                .map(({ idx }) => idx);\n\n              const isCorrect = expected.length === selected.length && expected.every((value) => selected.includes(value));\n              if (isCorrect) {\n                correctCount += 1;\n              }\n              const learnerAnswer = selected.length\n                ? selected.map((idx) => options[idx].innerText.trim()).join(', ')\n                : 'No response';\n              const correctAnswer = expected.length\n                ? expected.map((idx) => options[idx].innerText.trim()).join(', ')\n                : 'No correct answer provided';\n              const detail = document.createElement('div');\n              detail.className = 'feedback-item ' + (isCorrect ? 'correct' : 'incorrect');\n              const correctAnswerMarkup = isCorrect\n                ? ''\n                : '<p><strong>Correct answer:</strong> ' + correctAnswer + '</p>';\n              detail.innerHTML =\n                '<h4>' +\n                question.querySelector('.mc-question-title').innerText +\n                '</h4>' +\n                '<p><strong>Your answer:</strong> ' +\n                learnerAnswer +\n                '</p>' +\n                correctAnswerMarkup +\n                '<p class=\"explanation\">' +\n                (question.dataset.explanation || '') +\n                '</p>';\n              details.appendChild(detail);\n            });\n\n            scoreLine.textContent =\n              'You answered ' + correctCount + ' of ' + totalCount + ' correctly.';\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          };\n\n          checkBtn.addEventListener('click', evaluate);\n          closeBtn.addEventListener('click', () => (feedback.hidden = true));\n          resetBtn.addEventListener('click', () => {\n            details.innerHTML = '';\n            feedback.hidden = true;\n            document.querySelectorAll('.mc-options input').forEach((input) => {\n              if (input.type === 'radio' || input.type === 'checkbox') {\n                input.checked = false;\n              }\n            });\n          });\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "linking": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Badge Match Relay</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Badge Match Relay</h1>\n      <p class=\"instructions\">Review each badge brief, then link it to the headline that best captures its focus.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Award one point per correct link. Invite learners to justify any mismatches before revealing the key.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"linking-activity\">\n        \n          <div class=\"linking-row\" data-index=\"0\">\n            <div class=\"linking-prompt\">\n              <span class=\"linking-pill\">1</span>\n              <div class=\"linking-text\">\n                <p class=\"linking-statement\">Impact badge</p>\n                <p class=\"linking-hint\">Look for the badge that quantifies progress.</p>\n              </div>\n            </div>\n            <div class=\"linking-control\">\n              <label class=\"visually-hidden\" for=\"linking-select-0\">Match for Impact badge</label>\n              <select id=\"linking-select-0\" class=\"linking-select\" data-answer aria-label=\"Match for Impact badge\"></select>\n            </div>\n          </div>\n        \n          <div class=\"linking-row\" data-index=\"1\">\n            <div class=\"linking-prompt\">\n              <span class=\"linking-pill\">2</span>\n              <div class=\"linking-text\">\n                <p class=\"linking-statement\">Story badge</p>\n                <p class=\"linking-hint\">Pairs with a voice-led reflection.</p>\n              </div>\n            </div>\n            <div class=\"linking-control\">\n              <label class=\"visually-hidden\" for=\"linking-select-1\">Match for Story badge</label>\n              <select id=\"linking-select-1\" class=\"linking-select\" data-answer aria-label=\"Match for Story badge\"></select>\n            </div>\n          </div>\n        \n          <div class=\"linking-row\" data-index=\"2\">\n            <div class=\"linking-prompt\">\n              <span class=\"linking-pill\">3</span>\n              <div class=\"linking-text\">\n                <p class=\"linking-statement\">People badge</p>\n                <p class=\"linking-hint\">Focus on relationships and teams.</p>\n              </div>\n            </div>\n            <div class=\"linking-control\">\n              <label class=\"visually-hidden\" for=\"linking-select-2\">Match for People badge</label>\n              <select id=\"linking-select-2\" class=\"linking-select\" data-answer aria-label=\"Match for People badge\"></select>\n            </div>\n          </div>\n        \n        <div class=\"activity-actions\">\n          <button id=\"linking-check\" class=\"activity-btn\">Check links</button>\n          <button id=\"linking-reset\" class=\"activity-btn secondary\">Reset</button>\n        </div>\n        <aside id=\"linking-feedback\" class=\"linking-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"linking-summary\"></p>\n          <ul id=\"linking-details\" class=\"feedback-list\"></ul>\n          <button id=\"linking-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const pairs = [{\"prompt\":\"Impact badge\",\"match\":\"Highlights measurable outcomes or data gains\",\"hint\":\"Look for the badge that quantifies progress.\"},{\"prompt\":\"Story badge\",\"match\":\"Frames the narrative arc or learner voiceover\",\"hint\":\"Pairs with a voice-led reflection.\"},{\"prompt\":\"People badge\",\"match\":\"Spotlights collaborators, mentors, or partners\",\"hint\":\"Focus on relationships and teams.\"}];\n          const selects = Array.from(document.querySelectorAll('.linking-select'));\n          if (!pairs.length || !selects.length) return;\n          const baseOptions = pairs.map((pair, index) => ({ value: String(index), label: pair.match }));\n          const answerMap = new Map(baseOptions.map((entry) => [entry.value, entry.label]));\n          const shuffle = (items) => {\n            const copy = items.slice();\n            for (let i = copy.length - 1; i > 0; i -= 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n              [copy[i], copy[j]] = [copy[j], copy[i]];\n            }\n            return copy;\n          };\n          const buildOptions = (select) => {\n            const current = select.value;\n            select.innerHTML = '';\n            const placeholder = document.createElement('option');\n            placeholder.value = '';\n            placeholder.textContent = 'Choose match';\n            select.appendChild(placeholder);\n            shuffle(baseOptions).forEach((entry) => {\n              const option = document.createElement('option');\n              option.value = entry.value;\n              option.textContent = entry.label;\n              select.appendChild(option);\n            });\n            if (current && answerMap.has(current)) {\n              select.value = current;\n            }\n          };\n\n          const feedback = document.getElementById('linking-feedback');\n          const summary = document.getElementById('linking-summary');\n          const details = document.getElementById('linking-details');\n          const checkBtn = document.getElementById('linking-check');\n          const resetBtn = document.getElementById('linking-reset');\n          const closeBtn = document.getElementById('linking-close');\n\n          const resetRows = () => {\n            selects.forEach((select) => {\n              buildOptions(select);\n              select.value = '';\n              const row = select.closest('.linking-row');\n              if (row) {\n                row.classList.remove('correct', 'incorrect');\n              }\n            });\n            if (feedback) {\n              feedback.hidden = true;\n            }\n            if (details) {\n              details.innerHTML = '';\n            }\n          };\n\n          resetRows();\n\n          const evaluate = () => {\n            if (!feedback || !summary || !details) return;\n            let score = 0;\n            details.innerHTML = '';\n            selects.forEach((select, index) => {\n              const row = select.closest('.linking-row');\n              if (row) {\n                row.classList.remove('correct', 'incorrect');\n              }\n              const value = select.value;\n              const isCorrect = value && Number(value) === index;\n              if (row) {\n                row.classList.add(isCorrect ? 'correct' : 'incorrect');\n              }\n              if (isCorrect) {\n                score += 1;\n              }\n              const item = document.createElement('li');\n              const prompt = document.createElement('strong');\n              prompt.textContent = pairs[index].prompt;\n              item.appendChild(prompt);\n              const span = document.createElement('span');\n              const chosen = value ? answerMap.get(value) : 'No selection';\n              span.textContent = ' â You chose: ' + chosen + '. Correct: ' + answerMap.get(String(index)) + '.';\n              item.appendChild(span);\n              details.appendChild(item);\n            });\n            summary.textContent = 'You linked ' + score + ' of ' + pairs.length + ' correctly.';\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          };\n\n          if (checkBtn) {\n            checkBtn.addEventListener('click', evaluate);\n          }\n          if (resetBtn) {\n            resetBtn.addEventListener('click', () => resetRows());\n          }\n          if (closeBtn) {\n            closeBtn.addEventListener('click', () => {\n              if (feedback) {\n                feedback.hidden = true;\n              }\n            });\n          }\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "dropdown": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Select the Slide Move</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Select the Slide Move</h1>\n      <p class=\"instructions\">Read the prompt, then use the dropdown to choose the move that completes the card.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Celebrate a point for every accurate dropdown choice. Coach learners to explain why a move fits before revealing answers.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"dropdown-activity\">\n        \n          <article class=\"dropdown-item\" data-index=\"0\" data-correct=\"2\">\n            <p class=\"dropdown-prompt\">Slide 2 pairs the scenario pill with the ____ badge to ground the challenge.</p>\n            <label class=\"visually-hidden\" for=\"dropdown-select-0\">Answer for Slide 2 pairs the scenario pill with the ____ badge to ground the challenge.</label>\n            <select id=\"dropdown-select-0\" class=\"dropdown-select\" aria-label=\"Answer for Slide 2 pairs the scenario pill with the ____ badge to ground the challenge.\">\n              <option value=\"\">Choose answer</option>\n              <option value=\"0\">Impact</option><option value=\"1\">Story</option><option value=\"2\">Context</option>\n            </select>\n            <p class=\"dropdown-hint\" data-role=\"feedback\">The context badge reinforces the scenario so teams align on the brief.</p>\n          </article>\n        \n          <article class=\"dropdown-item\" data-index=\"1\" data-correct=\"0\">\n            <p class=\"dropdown-prompt\">During the prototype review we surface evidence with the ____ badge.</p>\n            <label class=\"visually-hidden\" for=\"dropdown-select-1\">Answer for During the prototype review we surface evidence with the ____ badge.</label>\n            <select id=\"dropdown-select-1\" class=\"dropdown-select\" aria-label=\"Answer for During the prototype review we surface evidence with the ____ badge.\">\n              <option value=\"\">Choose answer</option>\n              <option value=\"0\">Progress</option><option value=\"1\">Spark</option><option value=\"2\">People</option>\n            </select>\n            <p class=\"dropdown-hint\" data-role=\"feedback\">Progress keeps attention on iteration wins instead of new prompts.</p>\n          </article>\n        \n        <div class=\"activity-actions\">\n          <button id=\"dropdown-check\" class=\"activity-btn\">Check answers</button>\n          <button id=\"dropdown-reset\" class=\"activity-btn secondary\">Reset</button>\n        </div>\n        <aside id=\"dropdown-feedback\" class=\"dropdown-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"dropdown-summary\"></p>\n          <ul id=\"dropdown-details\" class=\"feedback-list\"></ul>\n          <button id=\"dropdown-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const items = [{\"prompt\":\"Slide 2 pairs the scenario pill with the ____ badge to ground the challenge.\",\"feedback\":\"The context badge reinforces the scenario so teams align on the brief.\",\"options\":[{\"text\":\"Impact\",\"correct\":false},{\"text\":\"Story\",\"correct\":false},{\"text\":\"Context\",\"correct\":true}]},{\"prompt\":\"During the prototype review we surface evidence with the ____ badge.\",\"feedback\":\"Progress keeps attention on iteration wins instead of new prompts.\",\"options\":[{\"text\":\"Progress\",\"correct\":true},{\"text\":\"Spark\",\"correct\":false},{\"text\":\"People\",\"correct\":false}]}];\n          const nodes = Array.from(document.querySelectorAll('.dropdown-item'));\n          if (!items.length || !nodes.length) return;\n          const checkBtn = document.getElementById('dropdown-check');\n          const resetBtn = document.getElementById('dropdown-reset');\n          const closeBtn = document.getElementById('dropdown-close');\n          const feedback = document.getElementById('dropdown-feedback');\n          const summary = document.getElementById('dropdown-summary');\n          const details = document.getElementById('dropdown-details');\n\n          const reset = () => {\n            nodes.forEach((node) => {\n              const select = node.querySelector('select');\n              if (select) {\n                select.value = '';\n              }\n              node.classList.remove('correct', 'incorrect');\n            });\n            if (feedback) {\n              feedback.hidden = true;\n            }\n            if (details) {\n              details.innerHTML = '';\n            }\n          };\n\n          const evaluate = () => {\n            if (!feedback || !summary || !details) return;\n            let score = 0;\n            details.innerHTML = '';\n            nodes.forEach((node, index) => {\n              const select = node.querySelector('select');\n              node.classList.remove('correct', 'incorrect');\n              const correctIndex = items[index].options.findIndex((opt) => opt.correct);\n              const selectedValue = select ? select.value : '';\n              const isCorrect = selectedValue !== '' && Number(selectedValue) === correctIndex;\n              node.classList.add(isCorrect ? 'correct' : 'incorrect');\n              if (isCorrect) {\n                score += 1;\n              }\n              const detail = document.createElement('li');\n              const prompt = document.createElement('strong');\n              prompt.textContent = items[index].prompt;\n              detail.appendChild(prompt);\n              const span = document.createElement('span');\n              const chosen = selectedValue !== '' ? items[index].options[Number(selectedValue)].text : 'No selection';\n              const correctLabel = correctIndex >= 0 ? items[index].options[correctIndex].text : 'Not set';\n              span.textContent = ' â You chose: ' + chosen + '. Correct: ' + correctLabel + '.';\n              detail.appendChild(span);\n              if (items[index].feedback) {\n                const note = document.createElement('p');\n                note.className = 'detail-note';\n                note.textContent = items[index].feedback;\n                detail.appendChild(note);\n              }\n              details.appendChild(detail);\n            });\n            summary.textContent = 'You answered ' + score + ' of ' + items.length + ' correctly.';\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          };\n\n          if (checkBtn) {\n            checkBtn.addEventListener('click', evaluate);\n          }\n          if (resetBtn) {\n            resetBtn.addEventListener('click', reset);\n          }\n          if (closeBtn) {\n            closeBtn.addEventListener('click', () => {\n              if (feedback) {\n                feedback.hidden = true;\n              }\n            });\n          }\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "gapfill": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Badge Copy Refinement</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Badge Copy Refinement</h1>\n      <p class=\"instructions\">Preview the mentor text pill, then tighten each badge caption with precise C1 language.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Award one point per correctly completed blank; coach for concision before revealing the model answers.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"gapfill-activity\">\n        <p class=\"gapfill-text\">Each slide opens with a \n          <span class=\"gap\" data-answers=\"scenario|context\">\n            <label class=\"visually-hidden\" for=\"gap-0\">Blank 1</label>\n            <input id=\"gap-0\" type=\"text\" aria-label=\"Blank 1\" placeholder=\"Type answer\" />\n          </span>\n         pill that anchors learners in a real brief. To reinforce the voice and tone, pair every action card with a \n          <span class=\"gap\" data-answers=\"badge|micro-badge\">\n            <label class=\"visually-hidden\" for=\"gap-1\">Blank 2</label>\n            <input id=\"gap-1\" type=\"text\" aria-label=\"Blank 2\" placeholder=\"Type answer\" />\n          </span>\n         label that signals the focus. During the showcase, move from the \n          <span class=\"gap\" data-answers=\"insight|key insight\">\n            <label class=\"visually-hidden\" for=\"gap-2\">Blank 3</label>\n            <input id=\"gap-2\" type=\"text\" aria-label=\"Blank 3\" placeholder=\"Type answer\" />\n          </span>\n        <span> badge into the reflection grid so evidence stays visible.</span></p>\n        <div class=\"activity-actions\">\n          <button id=\"gap-check\" class=\"activity-btn\">Check answers</button>\n          <button id=\"gap-reset\" class=\"activity-btn secondary\">Reset</button>\n        </div>\n        <aside id=\"gap-feedback\" class=\"gap-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"gap-score\"></p>\n          <div id=\"gap-details\"></div>\n          <button id=\"gap-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const gaps = Array.from(document.querySelectorAll('.gap'));\n          const checkBtn = document.getElementById('gap-check');\n          const resetBtn = document.getElementById('gap-reset');\n          const feedback = document.getElementById('gap-feedback');\n          const scoreLine = document.getElementById('gap-score');\n          const details = document.getElementById('gap-details');\n          const closeBtn = document.getElementById('gap-close');\n\n          const normalise = (value) => value.trim().toLowerCase();\n\n          checkBtn.addEventListener('click', () => {\n            let correct = 0;\n            let attempted = 0;\n            details.innerHTML = '';\n\n            gaps.forEach((gap, index) => {\n              const input = gap.querySelector('input');\n              const learnerValue = normalise(input.value);\n              const answers = gap.dataset.answers.split('|').map((ans) => normalise(ans));\n              if (!learnerValue) {\n                input.classList.remove('correct', 'incorrect');\n                return;\n              }\n              attempted += 1;\n              const isCorrect = answers.includes(learnerValue);\n              if (isCorrect) correct += 1;\n              input.classList.toggle('correct', isCorrect);\n              input.classList.toggle('incorrect', !isCorrect);\n              const detail = document.createElement('div');\n              detail.className = 'feedback-item ' + (isCorrect ? 'correct' : 'incorrect');\n              const acceptableAnswersMarkup = isCorrect\n                ? ''\n                :\n                    '<p><strong>Acceptable answers:</strong> ' +\n                    gap.dataset.answers.replace(/\\|/g, ', ') +\n                    '</p>';\n              detail.innerHTML =\n                '<h4>Blank ' +\n                (index + 1) +\n                '</h4>' +\n                '<p><strong>Your answer:</strong> ' +\n                (input.value || 'No response') +\n                '</p>' +\n                acceptableAnswersMarkup;\n              details.appendChild(detail);\n            });\n\n            if (attempted === 0) {\n              scoreLine.textContent = 'Please complete at least one blank before checking.';\n            } else {\n              scoreLine.textContent =\n                'You answered ' + correct + ' of ' + attempted + ' correctly.';\n            }\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          });\n\n          resetBtn.addEventListener('click', () => {\n            gaps.forEach((gap) => {\n              const input = gap.querySelector('input');\n              input.value = '';\n              input.classList.remove('correct', 'incorrect');\n            });\n            feedback.hidden = true;\n            details.innerHTML = '';\n          });\n\n          closeBtn.addEventListener('click', () => (feedback.hidden = true));\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "grouping": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Assemble the Slide Stack</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Assemble the Slide Stack</h1>\n      <p class=\"instructions\">Drag each card into the correct lane to storyboard the updated presentation flow.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Teams earn a collaboration badge for every card sorted into the matching lane.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"grouping-activity\">\n        <div class=\"group-source\" aria-label=\"Cards to sort\">\n        <div class=\"group-item\" draggable=\"true\" data-category=\"Launch Pillars\" id=\"group-item-0\">\n          Scenario pill\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Launch Pillars\" id=\"group-item-1\">\n          Spark question duo\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Launch Pillars\" id=\"group-item-2\">\n          Visual promise badge\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Studio Habits\" id=\"group-item-3\">\n          Feedback carousel\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Studio Habits\" id=\"group-item-4\">\n          Prototype gallery\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Studio Habits\" id=\"group-item-5\">\n          Coach check-in pill\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Reflection Tokens\" id=\"group-item-6\">\n          Glow/Grow cards\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Reflection Tokens\" id=\"group-item-7\">\n          Exit ticket mosaic\n        </div>\n      \n        <div class=\"group-item\" draggable=\"true\" data-category=\"Reflection Tokens\" id=\"group-item-8\">\n          Next steps badge\n        </div>\n      </div>\n        <div class=\"group-targets\">\n          <section class=\"group-target\" data-accepts=\"Launch Pillars\">\n            <header>\n              <h3>Launch Pillars</h3>\n              <p>Use these to open the deck with momentum and clarity.</p>\n            </header>\n            <div class=\"drop-zone\" aria-label=\"Launch Pillars\" data-zone-index=\"0\"></div>\n          </section>\n        \n          <section class=\"group-target\" data-accepts=\"Studio Habits\">\n            <header>\n              <h3>Studio Habits</h3>\n              <p>Mid-deck structures that drive iteration and prototyping.</p>\n            </header>\n            <div class=\"drop-zone\" aria-label=\"Studio Habits\" data-zone-index=\"1\"></div>\n          </section>\n        \n          <section class=\"group-target\" data-accepts=\"Reflection Tokens\">\n            <header>\n              <h3>Reflection Tokens</h3>\n              <p>Closing structures that surface evidence of learning.</p>\n            </header>\n            <div class=\"drop-zone\" aria-label=\"Reflection Tokens\" data-zone-index=\"2\"></div>\n          </section>\n        </div>\n        <div class=\"activity-actions\">\n          <button id=\"group-check\" class=\"activity-btn\">Check matches</button>\n          <button id=\"group-reset\" class=\"activity-btn secondary\">Reset</button>\n        </div>\n        <aside id=\"group-feedback\" class=\"group-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"group-score\"></p>\n          <div id=\"group-details\"></div>\n          <button id=\"group-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const dragItems = Array.from(document.querySelectorAll('.group-item'));\n          const dropZones = Array.from(document.querySelectorAll('.drop-zone'));\n          const checkBtn = document.getElementById('group-check');\n          const resetBtn = document.getElementById('group-reset');\n          const feedback = document.getElementById('group-feedback');\n          const scoreLine = document.getElementById('group-score');\n          const details = document.getElementById('group-details');\n          const closeBtn = document.getElementById('group-close');\n          const sourceContainer = document.querySelector('.group-source');\n\n          dragItems.forEach((item) => {\n            item.addEventListener('dragstart', (event) => {\n              event.dataTransfer.setData('text/plain', item.id);\n              setTimeout(() => item.classList.add('dragging'), 0);\n            });\n            item.addEventListener('dragend', () => item.classList.remove('dragging'));\n          });\n\n          const allowDrop = (event) => {\n            event.preventDefault();\n          };\n\n          dropZones.forEach((zone) => {\n            zone.addEventListener('dragover', allowDrop);\n            zone.addEventListener('drop', (event) => {\n              event.preventDefault();\n              const id = event.dataTransfer.getData('text/plain');\n              const dragged = document.getElementById(id);\n              if (dragged) {\n                zone.appendChild(dragged);\n              }\n            });\n          });\n\n          sourceContainer.addEventListener('dragover', allowDrop);\n          sourceContainer.addEventListener('drop', (event) => {\n            event.preventDefault();\n            const id = event.dataTransfer.getData('text/plain');\n            const dragged = document.getElementById(id);\n            if (dragged) {\n              sourceContainer.appendChild(dragged);\n            }\n          });\n\n          checkBtn.addEventListener('click', () => {\n            let correct = 0;\n            let total = dragItems.length;\n            details.innerHTML = '';\n\n            dropZones.forEach((zone) => {\n              const expected = zone.parentElement.querySelector('h3').innerText.trim();\n              Array.from(zone.children).forEach((item) => {\n                const isCorrect = item.dataset.category === expected;\n                item.classList.toggle('correct', isCorrect);\n                item.classList.toggle('incorrect', !isCorrect);\n                if (isCorrect) correct += 1;\n                const detail = document.createElement('div');\n                detail.className = 'feedback-item ' + (isCorrect ? 'correct' : 'incorrect');\n                detail.innerHTML =\n                  '<h4>' +\n                  item.innerText.trim() +\n                  '</h4>' +\n                  '<p>' +\n                  (isCorrect\n                    ? 'Placed correctly'\n                    : 'Should be in ' + item.dataset.category) +\n                  '</p>';\n                details.appendChild(detail);\n              });\n            });\n\n            scoreLine.textContent =\n              'You sorted ' + correct + ' of ' + total + ' cards correctly.';\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          });\n\n          resetBtn.addEventListener('click', () => {\n            dragItems.forEach((item) => {\n              item.classList.remove('correct', 'incorrect');\n              sourceContainer.appendChild(item);\n            });\n            details.innerHTML = '';\n            feedback.hidden = true;\n          });\n\n          closeBtn.addEventListener('click', () => (feedback.hidden = true));\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "multiple-choice-grid": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Slide Status Grid</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Slide Status Grid</h1>\n      <p class=\"instructions\">Scan each workflow card and choose the column that best describes its current status.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Score a point when the selected column aligns with the planning brief. Prompt learners to defend each placement.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"grid-activity\">\n        <div class=\"table-wrapper\">\n          <table class=\"grid-table\">\n            <thead>\n              <tr>\n                <th scope=\"col\" class=\"grid-head\">Prompt</th>\n                <th scope=\"col\">Ready to launch</th><th scope=\"col\">In iteration</th><th scope=\"col\">Needs support</th>\n              </tr>\n            </thead>\n            <tbody>\n              \n          <tr class=\"grid-row\" data-index=\"0\" data-correct=\"0\">\n            <th scope=\"row\">\n              <div class=\"grid-row-text\">\n                <span class=\"grid-row-label\">Scenario pill and spark question pair</span>\n                <p class=\"grid-row-note\">Sets the narrative hook for the sprint.</p>\n              </div>\n            </th>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-0\" value=\"0\" aria-label=\"Ready to launch\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-0\" value=\"1\" aria-label=\"In iteration\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-0\" value=\"2\" aria-label=\"Needs support\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n          </tr>\n        \n          <tr class=\"grid-row\" data-index=\"1\" data-correct=\"1\">\n            <th scope=\"row\">\n              <div class=\"grid-row-text\">\n                <span class=\"grid-row-label\">Prototype gallery slide</span>\n                <p class=\"grid-row-note\">Captures evidence of current builds.</p>\n              </div>\n            </th>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-1\" value=\"0\" aria-label=\"Ready to launch\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-1\" value=\"1\" aria-label=\"In iteration\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-1\" value=\"2\" aria-label=\"Needs support\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n          </tr>\n        \n          <tr class=\"grid-row\" data-index=\"2\" data-correct=\"2\">\n            <th scope=\"row\">\n              <div class=\"grid-row-text\">\n                <span class=\"grid-row-label\">Reflection badge grid</span>\n                <p class=\"grid-row-note\">Needs more learner voice before sharing.</p>\n              </div>\n            </th>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-2\" value=\"0\" aria-label=\"Ready to launch\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-2\" value=\"1\" aria-label=\"In iteration\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n              <td>\n                <label class=\"grid-choice\">\n                  <input type=\"radio\" name=\"grid-row-2\" value=\"2\" aria-label=\"Needs support\" />\n                  <span class=\"grid-choice-indicator\" aria-hidden=\"true\"></span>\n                </label>\n              </td>\n            \n          </tr>\n        \n            </tbody>\n          </table>\n        </div>\n        <div class=\"activity-actions\">\n          <button id=\"grid-check\" class=\"activity-btn\">Check grid</button>\n          <button id=\"grid-reset\" class=\"activity-btn secondary\">Reset</button>\n        </div>\n        <aside id=\"grid-feedback\" class=\"grid-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"grid-summary\"></p>\n          <ul id=\"grid-details\" class=\"feedback-list\"></ul>\n          <button id=\"grid-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const rows = Array.from(document.querySelectorAll('.grid-row'));\n          if (!rows.length) return;\n          const columns = [\"Ready to launch\",\"In iteration\",\"Needs support\"];\n          const checkBtn = document.getElementById('grid-check');\n          const resetBtn = document.getElementById('grid-reset');\n          const closeBtn = document.getElementById('grid-close');\n          const feedback = document.getElementById('grid-feedback');\n          const summary = document.getElementById('grid-summary');\n          const details = document.getElementById('grid-details');\n\n          const reset = () => {\n            rows.forEach((row) => {\n              row.classList.remove('correct', 'incorrect');\n              row.querySelectorAll('input[type=\"radio\"]').forEach((input) => {\n                input.checked = false;\n              });\n            });\n            if (feedback) {\n              feedback.hidden = true;\n            }\n            if (details) {\n              details.innerHTML = '';\n            }\n          };\n\n          const evaluate = () => {\n            if (!feedback || !summary || !details) return;\n            let score = 0;\n            details.innerHTML = '';\n            rows.forEach((row, index) => {\n              const correctIndex = Number(row.dataset.correct);\n              const selected = Array.from(row.querySelectorAll('input[type=\"radio\"]')).find((input) => input.checked);\n              const selectedIndex = selected ? Number(selected.value) : NaN;\n              const isCorrect = Number.isFinite(correctIndex) && selectedIndex === correctIndex;\n              row.classList.toggle('correct', isCorrect);\n              row.classList.toggle('incorrect', !isCorrect);\n              if (isCorrect) {\n                score += 1;\n              }\n              const detail = document.createElement('li');\n              const prompt = row.querySelector('.grid-row-label');\n              const heading = document.createElement('strong');\n              heading.textContent = prompt ? prompt.textContent : 'Row ' + (index + 1);\n              detail.appendChild(heading);\n              const span = document.createElement('span');\n              const chosenLabel = Number.isFinite(selectedIndex) ? columns[selectedIndex] : 'No selection';\n              const correctLabel = Number.isFinite(correctIndex) ? columns[correctIndex] : 'Not set';\n              span.textContent = ' â You chose: ' + chosenLabel + '. Correct: ' + correctLabel + '.';\n              detail.appendChild(span);\n              const note = row.querySelector('.grid-row-note');\n              if (note) {\n                const detailNote = document.createElement('p');\n                detailNote.className = 'detail-note';\n                detailNote.textContent = note.textContent;\n                detail.appendChild(detailNote);\n              }\n              details.appendChild(detail);\n            });\n            summary.textContent = 'You matched ' + score + ' of ' + rows.length + ' correctly.';\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          };\n\n          if (checkBtn) {\n            checkBtn.addEventListener('click', evaluate);\n          }\n          if (resetBtn) {\n            resetBtn.addEventListener('click', reset);\n          }\n          if (closeBtn) {\n            closeBtn.addEventListener('click', () => {\n              if (feedback) {\n                feedback.hidden = true;\n              }\n            });\n          }\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "ranking": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Sequence the Deck Flow</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Sequence the Deck Flow</h1>\n      <p class=\"instructions\">Drag or move each card to order the slide flow from opening to showcase.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Award two points for a perfect order. For near misses, ask teams to narrate the rationale before revealing the model.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"ranking-activity\">\n        <ol class=\"ranking-list\">\n          \n          <li class=\"ranking-item\" data-answer-index=\"0\">\n            <div class=\"ranking-card\">\n              <span class=\"ranking-number\">1</span>\n              <div class=\"ranking-body\">\n                <p class=\"ranking-text\">Scenario pill announces the brief</p>\n                <p class=\"ranking-note\">Hook learners with the real-world problem.</p>\n              </div>\n              <div class=\"ranking-controls\">\n                <button type=\"button\" data-role=\"rank-up\" aria-label=\"Move up Scenario pill announces the brief\">\n                  <i class=\"fa-solid fa-arrow-up\" aria-hidden=\"true\"></i>\n                </button>\n                <button type=\"button\" data-role=\"rank-down\" aria-label=\"Move down Scenario pill announces the brief\">\n                  <i class=\"fa-solid fa-arrow-down\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </li>\n        \n          <li class=\"ranking-item\" data-answer-index=\"1\">\n            <div class=\"ranking-card\">\n              <span class=\"ranking-number\">2</span>\n              <div class=\"ranking-body\">\n                <p class=\"ranking-text\">Studio habit carousel introduces practice moves</p>\n                <p class=\"ranking-note\">Cue the routines learners will rehearse.</p>\n              </div>\n              <div class=\"ranking-controls\">\n                <button type=\"button\" data-role=\"rank-up\" aria-label=\"Move up Studio habit carousel introduces practice moves\">\n                  <i class=\"fa-solid fa-arrow-up\" aria-hidden=\"true\"></i>\n                </button>\n                <button type=\"button\" data-role=\"rank-down\" aria-label=\"Move down Studio habit carousel introduces practice moves\">\n                  <i class=\"fa-solid fa-arrow-down\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </li>\n        \n          <li class=\"ranking-item\" data-answer-index=\"2\">\n            <div class=\"ranking-card\">\n              <span class=\"ranking-number\">3</span>\n              <div class=\"ranking-body\">\n                <p class=\"ranking-text\">Prototype gallery spotlights evidence</p>\n                <p class=\"ranking-note\">Showcase iterations and celebrate growth.</p>\n              </div>\n              <div class=\"ranking-controls\">\n                <button type=\"button\" data-role=\"rank-up\" aria-label=\"Move up Prototype gallery spotlights evidence\">\n                  <i class=\"fa-solid fa-arrow-up\" aria-hidden=\"true\"></i>\n                </button>\n                <button type=\"button\" data-role=\"rank-down\" aria-label=\"Move down Prototype gallery spotlights evidence\">\n                  <i class=\"fa-solid fa-arrow-down\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </li>\n        \n          <li class=\"ranking-item\" data-answer-index=\"3\">\n            <div class=\"ranking-card\">\n              <span class=\"ranking-number\">4</span>\n              <div class=\"ranking-body\">\n                <p class=\"ranking-text\">Reflection grid closes with next steps</p>\n                <p class=\"ranking-note\">Surface commitments and future experiments.</p>\n              </div>\n              <div class=\"ranking-controls\">\n                <button type=\"button\" data-role=\"rank-up\" aria-label=\"Move up Reflection grid closes with next steps\">\n                  <i class=\"fa-solid fa-arrow-up\" aria-hidden=\"true\"></i>\n                </button>\n                <button type=\"button\" data-role=\"rank-down\" aria-label=\"Move down Reflection grid closes with next steps\">\n                  <i class=\"fa-solid fa-arrow-down\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </li>\n        \n        </ol>\n        <div class=\"activity-actions\">\n          <button id=\"ranking-check\" class=\"activity-btn\">Check order</button>\n          <button id=\"ranking-reset\" class=\"activity-btn secondary\">Reshuffle</button>\n        </div>\n        <aside id=\"ranking-feedback\" class=\"ranking-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"ranking-summary\"></p>\n          <ul id=\"ranking-details\" class=\"feedback-list\"></ul>\n          <button id=\"ranking-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const list = document.querySelector('.ranking-list');\n          if (!list) return;\n          const items = [{\"text\":\"Scenario pill announces the brief\",\"note\":\"Hook learners with the real-world problem.\"},{\"text\":\"Studio habit carousel introduces practice moves\",\"note\":\"Cue the routines learners will rehearse.\"},{\"text\":\"Prototype gallery spotlights evidence\",\"note\":\"Showcase iterations and celebrate growth.\"},{\"text\":\"Reflection grid closes with next steps\",\"note\":\"Surface commitments and future experiments.\"}];\n          const entries = Array.from(list.children);\n          if (!entries.length) return;\n          const checkBtn = document.getElementById('ranking-check');\n          const resetBtn = document.getElementById('ranking-reset');\n          const closeBtn = document.getElementById('ranking-close');\n          const feedback = document.getElementById('ranking-feedback');\n          const summary = document.getElementById('ranking-summary');\n          const details = document.getElementById('ranking-details');\n\n          const shuffle = (array) => {\n            const copy = array.slice();\n            for (let i = copy.length - 1; i > 0; i -= 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n              [copy[i], copy[j]] = [copy[j], copy[i]];\n            }\n            return copy;\n          };\n\n          const refreshNumbers = () => {\n            Array.from(list.children).forEach((item, index) => {\n              const badge = item.querySelector('.ranking-number');\n              if (badge) {\n                badge.textContent = index + 1;\n              }\n            });\n          };\n\n          const updateControls = () => {\n            const children = Array.from(list.children);\n            children.forEach((item, index) => {\n              const upBtn = item.querySelector('button[data-role=\"rank-up\"]');\n              const downBtn = item.querySelector('button[data-role=\"rank-down\"]');\n              if (upBtn) {\n                upBtn.disabled = index === 0;\n              }\n              if (downBtn) {\n                downBtn.disabled = index === children.length - 1;\n              }\n            });\n          };\n\n          const reset = () => {\n            const shuffled = shuffle(entries);\n            shuffled.forEach((item) => {\n              item.classList.remove('correct', 'incorrect');\n              list.appendChild(item);\n            });\n            if (feedback) {\n              feedback.hidden = true;\n            }\n            if (details) {\n              details.innerHTML = '';\n            }\n            refreshNumbers();\n            updateControls();\n          };\n\n          list.addEventListener('click', (event) => {\n            const button = event.target.closest('button[data-role]');\n            if (!button) return;\n            const item = button.closest('.ranking-item');\n            if (!item) return;\n            if (button.dataset.role === 'rank-up') {\n              const previous = item.previousElementSibling;\n              if (previous) {\n                list.insertBefore(item, previous);\n              }\n            } else if (button.dataset.role === 'rank-down') {\n              const next = item.nextElementSibling;\n              if (next) {\n                list.insertBefore(next, item);\n              }\n            }\n            refreshNumbers();\n            updateControls();\n          });\n\n          const evaluate = () => {\n            if (!feedback || !summary || !details) return;\n            const ordered = Array.from(list.children);\n            let score = 0;\n            details.innerHTML = '';\n            ordered.forEach((item, position) => {\n              const answerIndex = Number(item.dataset.answerIndex);\n              const isCorrect = answerIndex === position;\n              item.classList.toggle('correct', isCorrect);\n              item.classList.toggle('incorrect', !isCorrect);\n              if (isCorrect) {\n                score += 1;\n              }\n              const detail = document.createElement('li');\n              const title = document.createElement('strong');\n              title.textContent = position + 1 + '. ' + items[answerIndex].text;\n              detail.appendChild(title);\n              if (!isCorrect) {\n                const span = document.createElement('span');\n                span.textContent = ' â Correct position: ' + (answerIndex + 1);\n                detail.appendChild(span);\n              }\n              if (items[answerIndex].note) {\n                const note = document.createElement('p');\n                note.className = 'detail-note';\n                note.textContent = items[answerIndex].note;\n                detail.appendChild(note);\n              }\n              details.appendChild(detail);\n            });\n            summary.textContent = 'You placed ' + score + ' of ' + ordered.length + ' in the correct position.';\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          };\n\n          if (checkBtn) {\n            checkBtn.addEventListener('click', evaluate);\n          }\n          if (resetBtn) {\n            resetBtn.addEventListener('click', reset);\n          }\n          if (closeBtn) {\n            closeBtn.addEventListener('click', () => {\n              if (feedback) {\n                feedback.hidden = true;\n              }\n            });\n          }\n\n          reset();\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "table-completion": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Card Composition Planner</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Card Composition Planner</h1>\n      <p class=\"instructions\">Complete the matrix to align each slide card with the new visual language.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Assign one point per accurately completed cell. Invite teams to justify their pairings before scoring.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <div class=\"table-activity\">\n        <div class=\"table-wrapper\">\n          <table><thead><tr><th>Focus area</th><th>Learner-facing move</th><th>Visible artifact</th></tr></thead><tbody><tr><th scope=\"row\">Scenario launch</th>\n              <td>\n                <label class=\"visually-hidden\" for=\"cell-0-0\">Learner-facing move for Scenario launch</label>\n                <input id=\"cell-0-0\" type=\"text\" data-answer=\"Pose a bold question framed as a pill\" data-header=\"Learner-facing move\" placeholder=\"Type here\" />\n              </td>\n            \n              <td>\n                <label class=\"visually-hidden\" for=\"cell-0-1\">Visible artifact for Scenario launch</label>\n                <input id=\"cell-0-1\" type=\"text\" data-answer=\"Hero image with overlay badge\" data-header=\"Visible artifact\" placeholder=\"Type here\" />\n              </td>\n            </tr><tr><th scope=\"row\">Practice lane</th>\n              <td>\n                <label class=\"visually-hidden\" for=\"cell-1-0\">Learner-facing move for Practice lane</label>\n                <input id=\"cell-1-0\" type=\"text\" data-answer=\"Sequence a trio of iterative tasks\" data-header=\"Learner-facing move\" placeholder=\"Type here\" />\n              </td>\n            \n              <td>\n                <label class=\"visually-hidden\" for=\"cell-1-1\">Visible artifact for Practice lane</label>\n                <input id=\"cell-1-1\" type=\"text\" data-answer=\"Card stack with step badges\" data-header=\"Visible artifact\" placeholder=\"Type here\" />\n              </td>\n            </tr><tr><th scope=\"row\">Reflection close</th>\n              <td>\n                <label class=\"visually-hidden\" for=\"cell-2-0\">Learner-facing move for Reflection close</label>\n                <input id=\"cell-2-0\" type=\"text\" data-answer=\"Collect evidence and next steps aloud\" data-header=\"Learner-facing move\" placeholder=\"Type here\" />\n              </td>\n            \n              <td>\n                <label class=\"visually-hidden\" for=\"cell-2-1\">Visible artifact for Reflection close</label>\n                <input id=\"cell-2-1\" type=\"text\" data-answer=\"Dual-column recap with progress chips\" data-header=\"Visible artifact\" placeholder=\"Type here\" />\n              </td>\n            </tr></tbody></table>\n        </div>\n        <div class=\"activity-actions\">\n          <button id=\"table-check\" class=\"activity-btn\">Check answers</button>\n          <button id=\"table-reset\" class=\"activity-btn secondary\">Reset</button>\n        </div>\n        <aside id=\"table-feedback\" class=\"table-feedback\" hidden>\n          <h3>Feedback</h3>\n          <p id=\"table-score\"></p>\n          <div id=\"table-details\"></div>\n          <button id=\"table-close\" class=\"activity-btn secondary\">Close</button>\n        </aside>\n      </div>\n      <script>\n        (() => {\n          const inputs = Array.from(document.querySelectorAll('.table-activity input'));\n          const checkBtn = document.getElementById('table-check');\n          const resetBtn = document.getElementById('table-reset');\n          const feedback = document.getElementById('table-feedback');\n          const scoreLine = document.getElementById('table-score');\n          const details = document.getElementById('table-details');\n          const closeBtn = document.getElementById('table-close');\n          const normalise = (value) => value.trim().toLowerCase();\n\n          checkBtn.addEventListener('click', () => {\n            let correct = 0;\n            let attempted = 0;\n            details.innerHTML = '';\n\n            inputs.forEach((input) => {\n              const learnerValue = normalise(input.value);\n              const answer = normalise(input.dataset.answer || '');\n              if (!learnerValue) {\n                input.classList.remove('correct', 'incorrect');\n                return;\n              }\n              attempted += 1;\n              const isCorrect = learnerValue === answer;\n              if (isCorrect) correct += 1;\n              input.classList.toggle('correct', isCorrect);\n              input.classList.toggle('incorrect', !isCorrect);\n              const detail = document.createElement('div');\n              detail.className = 'feedback-item ' + (isCorrect ? 'correct' : 'incorrect');\n              const tableAnswerMarkup = isCorrect\n                ? ''\n                : '<p><strong>Correct answer:</strong> ' + input.dataset.answer + '</p>';\n              detail.innerHTML =\n                '<h4>' +\n                input.closest('tr').querySelector('th').innerText +\n                ' â ' +\n                (input.dataset.header || '') +\n                '</h4>' +\n                '<p><strong>Your answer:</strong> ' +\n                (input.value || 'No response') +\n                '</p>' +\n                tableAnswerMarkup;\n              details.appendChild(detail);\n            });\n\n            if (attempted === 0) {\n              scoreLine.textContent = 'Please complete at least one cell before checking.';\n            } else {\n              scoreLine.textContent =\n                'You answered ' + correct + ' of ' + attempted + ' correctly.';\n            }\n            feedback.hidden = false;\n            feedback.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          });\n\n          resetBtn.addEventListener('click', () => {\n            inputs.forEach((input) => {\n              input.value = '';\n              input.classList.remove('correct', 'incorrect');\n            });\n            details.innerHTML = '';\n            feedback.hidden = true;\n          });\n\n          closeBtn.addEventListener('click', () => (feedback.hidden = true));\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n",
  "quiz-show": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Slide Quiz Showdown</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Questrial&display=swap\"\n    rel=\"stylesheet\"\n  />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n    integrity=\"sha512-MX58QX8wG7n+9yYvCMpOZXS6jttuPAHyBs+K6TfGsDzpDHK5vVsQt1zArhcXd1LSeX776BF3nf6/3cxguP3R0A==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    :root {\n      --bg: #f9faf7;\n      --surface: #ffffff;\n      --border: #d8e0d0;\n      --text: #1f261c;\n      --muted: #6b7a63;\n      --accent: #3d6f5d;\n      --accent-soft: rgba(61, 111, 93, 0.1);\n      --error: #c75c5c;\n      --success: #3d8458;\n      font-family: 'Nunito', 'Segoe UI', sans-serif;\n    }\n\n    body {\n      margin: 0;\n      background: var(--bg);\n      color: var(--text);\n      font-size: 16px;\n      line-height: 1.6;\n    }\n\n    .activity-shell {\n      max-width: 900px;\n      margin: 0 auto;\n      padding: 3rem 1.5rem 4rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1.25rem;\n    }\n\n    header.activity-header {\n      background: var(--surface);\n      border-radius: 20px;\n      padding: 2rem;\n      border: 1px solid var(--border);\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    header.activity-header h1 {\n      margin: 0 0 0.5rem;\n      font-family: 'Questrial', sans-serif;\n      letter-spacing: 0.02em;\n      font-size: 2.1rem;\n    }\n\n    header.activity-header p.instructions {\n      margin: 0;\n      color: var(--muted);\n    }\n\n    header.activity-header .rubric {\n      margin-top: 1.25rem;\n      padding: 1rem 1.25rem;\n      background: var(--accent-soft);\n      border-radius: 14px;\n      border: 1px dashed var(--accent);\n    }\n\n    .activity-body {\n      background: var(--surface);\n      border-radius: 20px;\n      border: 1px solid var(--border);\n      padding: 2rem;\n      box-shadow: 0 12px 28px rgba(31, 38, 28, 0.06);\n      display: flex;\n      flex-direction: column;\n      gap: 1.75rem;\n    }\n\n    .activity-btn {\n      border-radius: 999px;\n      border: none;\n      padding: 0.75rem 1.75rem;\n      font-weight: 700;\n      letter-spacing: 0.02em;\n      background: linear-gradient(135deg, var(--accent), #559e86);\n      color: #fff;\n      cursor: pointer;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .activity-btn:hover,\n    .activity-btn:focus-visible {\n      transform: translateY(-1px);\n      box-shadow: 0 10px 28px rgba(61, 111, 93, 0.25);\n    }\n\n    .activity-btn.secondary {\n      background: transparent;\n      color: var(--accent);\n      border: 1px solid var(--accent);\n      box-shadow: none;\n    }\n\n    .activity-actions {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .feedback-item {\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 1rem 1.25rem;\n      background: rgba(255, 255, 255, 0.9);\n      margin-bottom: 0.75rem;\n    }\n\n    .feedback-item.correct {\n      border-left: 5px solid var(--success);\n    }\n\n    .feedback-item.incorrect {\n      border-left: 5px solid var(--error);\n    }\n\n    .feedback-item h4 {\n      margin-top: 0;\n      margin-bottom: 0.35rem;\n      font-size: 1rem;\n    }\n\n    .feedback-item p {\n      margin: 0.15rem 0;\n    }\n\n    .feedback-item .explanation {\n      margin-top: 0.5rem;\n      color: var(--muted);\n    }\n\n    .mc-question,\n    .gapfill-text,\n    .grouping-activity,\n    .table-wrapper {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .mc-options {\n      display: grid;\n      gap: 0.75rem;\n      margin-top: 1rem;\n    }\n\n    .mc-option {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.65rem;\n      align-items: center;\n      background: #fff;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      border: 1px solid var(--border);\n    }\n\n    .mc-feedback,\n    .gap-feedback,\n    .group-feedback,\n    .table-feedback,\n    .linking-feedback,\n    .dropdown-feedback,\n    .grid-feedback,\n    .ranking-feedback {\n      background: var(--surface);\n      border-radius: 18px;\n      border: 1px solid var(--border);\n      padding: 1.5rem;\n      box-shadow: 0 18px 32px rgba(31, 38, 28, 0.08);\n    }\n\n    .feedback-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.9rem;\n    }\n\n    .feedback-list li {\n      display: flex;\n      flex-direction: column;\n      gap: 0.35rem;\n    }\n\n    .feedback-list li strong {\n      font-size: 0.95rem;\n    }\n\n    .detail-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .gapfill-text {\n      line-height: 1.9;\n      font-size: 1.05rem;\n    }\n\n    .gapfill-text input {\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.35rem 0.5rem;\n      min-width: 120px;\n    }\n\n    .gapfill-text input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    .gapfill-text input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .grouping-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .group-source {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.75rem;\n    }\n\n    .group-item {\n      background: #fff;\n      border-radius: 999px;\n      padding: 0.55rem 1.15rem;\n      border: 1px solid var(--border);\n      cursor: grab;\n      transition: transform 0.2s ease;\n    }\n\n    .group-item.dragging {\n      opacity: 0.7;\n      transform: scale(0.96);\n    }\n\n    .group-item.correct {\n      border-color: var(--success);\n    }\n\n    .group-item.incorrect {\n      border-color: var(--error);\n    }\n\n    .group-targets {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .linking-activity,\n    .dropdown-activity,\n    .grid-activity,\n    .ranking-activity {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .linking-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .linking-row {\n      display: grid;\n      grid-template-columns: minmax(0, 1.2fr) minmax(0, 0.8fr);\n      gap: 1rem;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      border-radius: 14px;\n      background: #fff;\n      border: 1px solid var(--border);\n    }\n\n    .linking-row.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.25);\n    }\n\n    .linking-row.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .linking-prompt {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-start;\n    }\n\n    .linking-pill {\n      width: 32px;\n      height: 32px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .linking-text {\n      display: grid;\n      gap: 0.4rem;\n    }\n\n    .linking-statement {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .linking-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .linking-select,\n    .dropdown-select {\n      width: 100%;\n      border-radius: 12px;\n      border: 1px solid var(--border);\n      padding: 0.5rem 0.75rem;\n      font-size: 1rem;\n      background: #fff;\n    }\n\n    .dropdown-activity {\n      background: rgba(246, 248, 243, 0.65);\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      padding: 1.5rem;\n    }\n\n    .dropdown-item {\n      border: 1px solid var(--border);\n      border-radius: 14px;\n      padding: 1rem;\n      display: grid;\n      gap: 0.75rem;\n      background: #fff;\n    }\n\n    .dropdown-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .dropdown-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .dropdown-prompt {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .dropdown-hint {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 18px;\n      overflow: hidden;\n      border: 1px solid var(--border);\n    }\n\n    .grid-table th,\n    .grid-table td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: center;\n      vertical-align: middle;\n    }\n\n    .grid-table .grid-head {\n      text-align: left;\n      font-weight: 700;\n    }\n\n    .grid-row-text {\n      text-align: left;\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .grid-row-note {\n      margin: 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .grid-choice {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    }\n\n    .grid-choice-indicator {\n      width: 18px;\n      height: 18px;\n      border-radius: 50%;\n      border: 2px solid var(--border);\n      display: inline-block;\n    }\n\n    .grid-choice input {\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    .grid-choice input:checked + .grid-choice-indicator {\n      border-color: var(--accent);\n      background: var(--accent);\n    }\n\n    .grid-row.correct {\n      background: rgba(61, 132, 88, 0.08);\n    }\n\n    .grid-row.incorrect {\n      background: rgba(199, 92, 92, 0.08);\n    }\n\n    .ranking-list {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      display: grid;\n      gap: 0.75rem;\n    }\n\n    .ranking-item {\n      border: 1px solid var(--border);\n      border-radius: 16px;\n      background: #fff;\n      transition: transform 0.2s ease;\n    }\n\n    .ranking-item.correct {\n      border-color: var(--success);\n      box-shadow: 0 0 0 2px rgba(61, 132, 88, 0.2);\n    }\n\n    .ranking-item.incorrect {\n      border-color: var(--error);\n      box-shadow: 0 0 0 2px rgba(199, 92, 92, 0.2);\n    }\n\n    .ranking-card {\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      gap: 1rem;\n      align-items: center;\n      padding: 0.9rem 1.1rem;\n    }\n\n    .ranking-number {\n      width: 34px;\n      height: 34px;\n      border-radius: 999px;\n      background: var(--accent);\n      color: #fff;\n      display: grid;\n      place-items: center;\n      font-weight: 700;\n    }\n\n    .ranking-text {\n      margin: 0;\n      font-weight: 600;\n    }\n\n    .ranking-note {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n      font-size: 0.85rem;\n    }\n\n    .ranking-controls {\n      display: grid;\n      gap: 0.35rem;\n    }\n\n    .ranking-controls button {\n      border: none;\n      background: rgba(61, 111, 93, 0.12);\n      color: var(--accent);\n      border-radius: 10px;\n      padding: 0.35rem;\n      cursor: pointer;\n      transition: background 0.2s ease;\n    }\n\n    .ranking-controls button:disabled {\n      opacity: 0.4;\n      cursor: not-allowed;\n    }\n\n    .ranking-controls button:not(:disabled):hover,\n    .ranking-controls button:not(:disabled):focus-visible {\n      background: rgba(61, 111, 93, 0.22);\n      outline: none;\n    }\n\n    .group-target header h3 {\n      margin: 0;\n    }\n\n    .group-target header p {\n      margin: 0.25rem 0 0;\n      color: var(--muted);\n    }\n\n    .drop-zone {\n      min-height: 90px;\n      margin-top: 0.75rem;\n      border: 2px dashed var(--border);\n      border-radius: 14px;\n      padding: 0.75rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.65rem;\n      background: rgba(255, 255, 255, 0.6);\n    }\n\n    .table-wrapper {\n      overflow-x: auto;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background: #fff;\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    th,\n    td {\n      border: 1px solid var(--border);\n      padding: 0.75rem;\n      text-align: left;\n    }\n\n    th {\n      background: rgba(61, 111, 93, 0.08);\n    }\n\n    td input {\n      width: 100%;\n      border: 1px solid var(--border);\n      border-radius: 10px;\n      padding: 0.5rem 0.65rem;\n    }\n\n    td input.correct {\n      border-color: var(--success);\n      background: rgba(61, 132, 88, 0.12);\n    }\n\n    td input.incorrect {\n      border-color: var(--error);\n      background: rgba(199, 92, 92, 0.12);\n    }\n\n    .visually-hidden {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border: 0;\n    }\n\n    @media (min-width: 900px) {\n      .group-targets {\n        grid-template-columns: repeat(2, minmax(0, 1fr));\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"activity-shell\">\n    <header class=\"activity-header\">\n      <h1>Slide Quiz Showdown</h1>\n      <p class=\"instructions\">Run the lightning round: reveal the prompt pill, let teams buzz in, then flip the answer and extension cards.</p>\n      <div class=\"rubric\">\n        <strong>Success criteria:</strong>\n        <p>Award two points for accurate responses and one point for strong extensions. Pause between slides to celebrate badges earned.</p>\n      </div>\n    </header>\n    <section class=\"activity-body\">\n      \n      <style>\n        .quiz-show {\n          position: relative;\n          display: flex;\n          flex-direction: column;\n          gap: 2rem;\n        }\n\n        .quiz-stage {\n          position: relative;\n          padding-top: 1.5rem;\n        }\n\n        .quiz-frame {\n          background: rgba(246, 248, 243, 0.75);\n          border: 1px solid var(--border);\n          border-radius: 20px;\n          padding: 2rem 1.75rem 2.5rem;\n          min-height: 360px;\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .quiz-scoreboard {\n          position: absolute;\n          top: -1.5rem;\n          right: -1.5rem;\n          width: min(260px, 80vw);\n          background: #fff;\n          border-radius: 20px;\n          border: 1px solid var(--border);\n          box-shadow: 0 22px 38px rgba(31, 38, 28, 0.12);\n          padding: 1.25rem;\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n          z-index: 5;\n        }\n\n        .scoreboard-header h2 {\n          margin: 0;\n          font-size: 1.1rem;\n          font-family: 'Questrial', sans-serif;\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n        }\n\n        .scoreboard-header p {\n          margin: 0;\n          color: var(--muted);\n          font-size: 0.85rem;\n        }\n\n        .scoreboard-list {\n          list-style: none;\n          margin: 0;\n          padding: 0;\n          display: flex;\n          flex-direction: column;\n          gap: 0.75rem;\n        }\n\n        .team-card {\n          position: relative;\n          display: grid;\n          grid-template-columns: auto 1fr auto;\n          gap: 0.75rem;\n          align-items: center;\n          background: rgba(246, 248, 243, 0.65);\n          border: 1px solid var(--border);\n          border-radius: 16px;\n          padding: 0.75rem 0.9rem;\n          overflow: hidden;\n        }\n\n        .team-icon-shell {\n          width: 42px;\n          height: 42px;\n          border-radius: 12px;\n          display: grid;\n          place-items: center;\n          background: var(--accent-soft);\n          color: var(--accent);\n          font-size: 1.25rem;\n        }\n\n        .team-icon-shell.team-icon-shell--empty {\n          background: rgba(255, 255, 255, 0.6);\n          color: var(--muted);\n          border: 1px dashed var(--border);\n          font-size: 0.75rem;\n        }\n\n        .team-name {\n          display: block;\n          font-weight: 700;\n        }\n\n        .team-score {\n          display: block;\n          font-size: 1.35rem;\n          font-weight: 800;\n          color: var(--accent);\n        }\n\n        .score-btn {\n          border: none;\n          background: var(--accent);\n          color: #fff;\n          border-radius: 50%;\n          width: 42px;\n          height: 42px;\n          display: grid;\n          place-items: center;\n          cursor: pointer;\n          transition: transform 0.2s ease, box-shadow 0.2s ease;\n          font-weight: 700;\n          font-size: 1rem;\n        }\n\n        .score-btn:hover,\n        .score-btn:focus-visible {\n          transform: translateY(-1px);\n          box-shadow: 0 12px 28px rgba(61, 111, 93, 0.35);\n          outline: none;\n        }\n\n        .burst {\n          position: absolute;\n          inset: 0;\n          background: radial-gradient(circle, rgba(255, 215, 141, 0.9) 0%, rgba(255, 215, 141, 0) 70%);\n          opacity: 0;\n          transform: scale(0.7);\n          pointer-events: none;\n          border-radius: inherit;\n        }\n\n        .team-card.bursting .burst {\n          animation: quiz-burst 550ms ease-out forwards;\n        }\n\n        @keyframes quiz-burst {\n          0% {\n            opacity: 0.85;\n            transform: scale(0.65);\n          }\n          100% {\n            opacity: 0;\n            transform: scale(1.2);\n          }\n        }\n\n        .quiz-progress {\n          font-weight: 700;\n          letter-spacing: 0.08em;\n          text-transform: uppercase;\n          color: var(--muted);\n        }\n\n        .quiz-slides {\n          position: relative;\n        }\n\n        .quiz-slide {\n          display: none;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .quiz-slide.is-active {\n          display: flex;\n        }\n\n        .quiz-slide-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          gap: 1rem;\n        }\n\n        .quiz-pill {\n          background: var(--accent);\n          color: #fff;\n          border-radius: 999px;\n          padding: 0.35rem 1rem;\n          font-weight: 700;\n          letter-spacing: 0.05em;\n          text-transform: uppercase;\n          font-size: 0.75rem;\n        }\n\n        .quiz-slide-timer {\n          font-weight: 700;\n          color: var(--accent);\n        }\n\n        .quiz-slide-body {\n          display: grid;\n          gap: 1.25rem;\n          grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n          align-items: start;\n        }\n\n        .quiz-copy {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n        }\n\n        .quiz-question-text {\n          font-size: 1.25rem;\n          line-height: 1.7;\n        }\n\n        .quiz-visual {\n          margin: 0;\n          border-radius: 18px;\n          overflow: hidden;\n          box-shadow: 0 18px 36px rgba(31, 38, 28, 0.12);\n          border: 1px solid var(--border);\n        }\n\n        .quiz-visual img {\n          width: 100%;\n          height: auto;\n          display: block;\n          object-fit: cover;\n        }\n\n        .quiz-reveal-content {\n          border-top: 1px dashed var(--border);\n          padding-top: 1rem;\n          display: grid;\n          gap: 0.75rem;\n          opacity: 0;\n          max-height: 0;\n          overflow: hidden;\n          transition: opacity 0.35s ease, max-height 0.35s ease;\n        }\n\n        .quiz-slide.is-revealed .quiz-reveal-content {\n          opacity: 1;\n          max-height: 640px;\n        }\n\n        .quiz-answer h3,\n        .quiz-feedback h3 {\n          margin: 0 0 0.4rem;\n          font-size: 1rem;\n          display: flex;\n          align-items: center;\n          gap: 0.45rem;\n        }\n\n        .quiz-answer p,\n        .quiz-feedback p {\n          margin: 0;\n        }\n\n        .quiz-slide-footer {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        .quiz-slide.time-up .quiz-slide-header {\n          animation: pulse-accent 1s ease-in-out infinite;\n        }\n\n        @keyframes pulse-accent {\n          0%,\n          100% {\n            color: var(--accent);\n          }\n          50% {\n            color: var(--error);\n          }\n        }\n\n        .quiz-controls {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          gap: 1rem;\n          flex-wrap: wrap;\n        }\n\n        .quiz-timer {\n          font-weight: 700;\n          font-size: 1.1rem;\n          color: var(--accent);\n        }\n\n        .quiz-controls button[disabled] {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        @media (max-width: 860px) {\n          .quiz-scoreboard {\n            position: static;\n            width: 100%;\n            margin-bottom: 1.5rem;\n          }\n\n          .quiz-stage {\n            padding-top: 0;\n          }\n\n          .quiz-frame {\n            padding: 1.5rem;\n          }\n        }\n      </style>\n      <div class=\"quiz-show\">\n        <div class=\"quiz-stage\" data-default-time=\"35\">\n          <aside class=\"quiz-scoreboard\" aria-label=\"Scoreboard\">\n            <div class=\"scoreboard-header\">\n              <h2>Scoreboard</h2>\n              <p>Use the control to award a point.</p>\n            </div>\n            <ul class=\"scoreboard-list\">\n              \n          <li class=\"team-card\" data-team-index=\"0\" data-score=\"0\">\n            <div class=\"team-icon-shell team-icon-shell--empty\" aria-hidden=\"true\"></div>\n            <div class=\"team-meta\">\n              <span class=\"team-name\">Team Catalyst</span>\n              <span class=\"team-score\" data-role=\"score\">0</span>\n            </div>\n            <button type=\"button\" class=\"score-btn\" data-action=\"increment\" aria-label=\"Add a point to Team Catalyst\">\n              <span aria-hidden=\"true\">+1</span>\n            </button>\n            <span class=\"burst\" aria-hidden=\"true\"></span>\n          </li>\n        \n          <li class=\"team-card\" data-team-index=\"1\" data-score=\"0\">\n            <div class=\"team-icon-shell team-icon-shell--empty\" aria-hidden=\"true\"></div>\n            <div class=\"team-meta\">\n              <span class=\"team-name\">Team Atlas</span>\n              <span class=\"team-score\" data-role=\"score\">0</span>\n            </div>\n            <button type=\"button\" class=\"score-btn\" data-action=\"increment\" aria-label=\"Add a point to Team Atlas\">\n              <span aria-hidden=\"true\">+1</span>\n            </button>\n            <span class=\"burst\" aria-hidden=\"true\"></span>\n          </li>\n        \n          <li class=\"team-card\" data-team-index=\"2\" data-score=\"0\">\n            <div class=\"team-icon-shell team-icon-shell--empty\" aria-hidden=\"true\"></div>\n            <div class=\"team-meta\">\n              <span class=\"team-name\">Team Pulse</span>\n              <span class=\"team-score\" data-role=\"score\">0</span>\n            </div>\n            <button type=\"button\" class=\"score-btn\" data-action=\"increment\" aria-label=\"Add a point to Team Pulse\">\n              <span aria-hidden=\"true\">+1</span>\n            </button>\n            <span class=\"burst\" aria-hidden=\"true\"></span>\n          </li>\n        \n            </ul>\n          </aside>\n          <div class=\"quiz-frame\">\n            <div class=\"quiz-progress\" id=\"quiz-progress\" aria-live=\"polite\"></div>\n            <div class=\"quiz-slides\">\n              \n          <article class=\"quiz-slide is-active\" data-slide-index=\"0\" data-time=\"40\">\n            <header class=\"quiz-slide-header\">\n              <span class=\"quiz-pill\">Question 1</span>\n              <span class=\"quiz-slide-timer\" data-slide-timer>40s</span>\n            </header>\n            <div class=\"quiz-slide-body\">\n              <div class=\"quiz-copy\">\n                <div class=\"quiz-question-text\">Which visual cue signals a progress badge has been earned during the reflection slide?</div>\n                <div class=\"quiz-reveal-content\">\n                  <div class=\"quiz-answer\">\n                    <h3>Answer</h3>\n                    <p>A soft green chip with the badge icon pulses beside the learner name.</p>\n                  </div>\n                  <div class=\"quiz-feedback\">\n                    <h3>Extension</h3>\n                    <p>Invite learners to describe what evidence unlocked that badge to reinforce metacognition.</p>\n                  </div>\n                </div>\n              </div>\n              \n            <figure class=\"quiz-visual\">\n              <img src=\"https://images.pexels.com/photos/414645/pexels-photo-414645.jpeg\" alt=\"Illustration for question 1\" loading=\"lazy\" />\n            </figure>\n          \n            </div>\n            <footer class=\"quiz-slide-footer\">\n              <button type=\"button\" class=\"activity-btn secondary quiz-reveal-btn\" data-role=\"reveal\">\n                <span>Reveal answer</span>\n              </button>\n            </footer>\n          </article>\n        \n          <article class=\"quiz-slide \" data-slide-index=\"1\" data-time=\"30\">\n            <header class=\"quiz-slide-header\">\n              <span class=\"quiz-pill\">Question 2</span>\n              <span class=\"quiz-slide-timer\" data-slide-timer>30s</span>\n            </header>\n            <div class=\"quiz-slide-body\">\n              <div class=\"quiz-copy\">\n                <div class=\"quiz-question-text\">How should we introduce a new studio habit card when time is limited?</div>\n                <div class=\"quiz-reveal-content\">\n                  <div class=\"quiz-answer\">\n                    <h3>Answer</h3>\n                    <p>Use the Story pill to headline the purpose, then anchor the task with a single coaching prompt.</p>\n                  </div>\n                  <div class=\"quiz-feedback\">\n                    <h3>Extension</h3>\n                    <p>Model a concise demo before inviting teams to rehearse the habit in pairs.</p>\n                  </div>\n                </div>\n              </div>\n              \n            <figure class=\"quiz-visual\">\n              <img src=\"https://images.pexels.com/photos/3184328/pexels-photo-3184328.jpeg\" alt=\"Illustration for question 2\" loading=\"lazy\" />\n            </figure>\n          \n            </div>\n            <footer class=\"quiz-slide-footer\">\n              <button type=\"button\" class=\"activity-btn secondary quiz-reveal-btn\" data-role=\"reveal\">\n                <span>Reveal answer</span>\n              </button>\n            </footer>\n          </article>\n        \n          <article class=\"quiz-slide \" data-slide-index=\"2\" data-time=\"35\">\n            <header class=\"quiz-slide-header\">\n              <span class=\"quiz-pill\">Question 3</span>\n              <span class=\"quiz-slide-timer\" data-slide-timer>35s</span>\n            </header>\n            <div class=\"quiz-slide-body\">\n              <div class=\"quiz-copy\">\n                <div class=\"quiz-question-text\">What belongs in the recap grid after a prototyping sprint?</div>\n                <div class=\"quiz-reveal-content\">\n                  <div class=\"quiz-answer\">\n                    <h3>Answer</h3>\n                    <p>Three wins, one edge, and next-iteration commitments captured as badges.</p>\n                  </div>\n                  <div class=\"quiz-feedback\">\n                    <h3>Extension</h3>\n                    <p>Layer the exit ticket mosaic beneath so trends stay visible across teams.</p>\n                  </div>\n                </div>\n              </div>\n              \n            <figure class=\"quiz-visual\">\n              <img src=\"https://images.pexels.com/photos/1181356/pexels-photo-1181356.jpeg\" alt=\"Illustration for question 3\" loading=\"lazy\" />\n            </figure>\n          \n            </div>\n            <footer class=\"quiz-slide-footer\">\n              <button type=\"button\" class=\"activity-btn secondary quiz-reveal-btn\" data-role=\"reveal\">\n                <span>Reveal answer</span>\n              </button>\n            </footer>\n          </article>\n        \n            </div>\n            <div class=\"quiz-controls\">\n              <button type=\"button\" class=\"activity-btn secondary\" id=\"quiz-prev\">\n                <span>Previous</span>\n              </button>\n              <div class=\"quiz-timer\">Time left: <span id=\"quiz-timer-value\">35s</span></div>\n              <button type=\"button\" class=\"activity-btn\" id=\"quiz-next\">\n                <span>Next</span>\n                \n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <script>\n        (() => {\n          const stage = document.querySelector('.quiz-stage');\n          if (!stage) return;\n          const slides = Array.from(stage.querySelectorAll('.quiz-slide'));\n          if (!slides.length) return;\n          const defaultTime = Number(stage.dataset.defaultTime) || 35;\n          const prevBtn = document.getElementById('quiz-prev');\n          const nextBtn = document.getElementById('quiz-next');\n          const timerDisplay = document.getElementById('quiz-timer-value');\n          const progressDisplay = document.getElementById('quiz-progress');\n          let activeIndex = slides.findIndex((slide) => slide.classList.contains('is-active'));\n          if (activeIndex < 0) activeIndex = 0;\n          let timerId = null;\n          let remaining = 0;\n\n          const getSlideTime = (slide) => {\n            const raw = Number(slide.dataset.time);\n            if (Number.isFinite(raw) && raw > 0) {\n              return Math.round(raw);\n            }\n            return defaultTime;\n          };\n\n          const updateButtons = () => {\n            if (prevBtn) {\n              prevBtn.disabled = activeIndex === 0;\n            }\n            if (nextBtn) {\n              const label = nextBtn.querySelector('span');\n              if (label) {\n                label.textContent = activeIndex === slides.length - 1 ? 'Restart' : 'Next';\n              }\n            }\n          };\n\n          const setProgress = () => {\n            if (!progressDisplay) return;\n            progressDisplay.textContent = 'Question ' + (activeIndex + 1) + ' of ' + slides.length;\n          };\n\n          const updateTimerLabel = () => {\n            const value = Math.max(0, Math.ceil(remaining)) + 's';\n            if (timerDisplay) {\n              timerDisplay.textContent = value;\n            }\n            const currentSlide = slides[activeIndex];\n            const slideTimer = currentSlide ? currentSlide.querySelector('[data-slide-timer]') : null;\n            if (slideTimer) {\n              slideTimer.textContent = value;\n            }\n          };\n\n          const clearTimer = () => {\n            if (timerId) {\n              window.clearInterval(timerId);\n              timerId = null;\n            }\n          };\n\n          const startTimer = (duration) => {\n            clearTimer();\n            remaining = duration;\n            updateTimerLabel();\n            timerId = window.setInterval(() => {\n              remaining -= 1;\n              if (remaining <= 0) {\n                remaining = 0;\n                updateTimerLabel();\n                clearTimer();\n                const current = slides[activeIndex];\n                if (current) {\n                  current.classList.add('time-up');\n                }\n              } else {\n                updateTimerLabel();\n              }\n            }, 1000);\n          };\n\n          const activateSlide = (index) => {\n            if (index < 0 || index >= slides.length) return;\n            slides.forEach((slide, idx) => {\n              slide.classList.toggle('is-active', idx === index);\n              if (idx === index) {\n                slide.classList.remove('is-revealed', 'time-up');\n              }\n            });\n            activeIndex = index;\n            setProgress();\n            updateButtons();\n            startTimer(getSlideTime(slides[activeIndex]));\n          };\n\n          if (prevBtn) {\n            prevBtn.addEventListener('click', () => {\n              if (activeIndex > 0) {\n                activateSlide(activeIndex - 1);\n              }\n            });\n          }\n\n          if (nextBtn) {\n            nextBtn.addEventListener('click', () => {\n              if (activeIndex === slides.length - 1) {\n                activateSlide(0);\n              } else {\n                activateSlide(activeIndex + 1);\n              }\n            });\n          }\n\n          stage.addEventListener('click', (event) => {\n            const revealBtn = event.target.closest('[data-role=\"reveal\"]');\n            if (!revealBtn) return;\n            const slide = revealBtn.closest('.quiz-slide');\n            if (!slide) return;\n            const isRevealed = slide.classList.toggle('is-revealed');\n            const labelSpan = revealBtn.querySelector('span');\n            if (labelSpan) {\n              labelSpan.textContent = isRevealed ? 'Hide answer' : 'Reveal answer';\n            }\n            const icon = revealBtn.querySelector('i');\n            if (icon) {\n              icon.classList.toggle('fa-eye', !isRevealed);\n              icon.classList.toggle('fa-eye-slash', isRevealed);\n            }\n            if (isRevealed) {\n              clearTimer();\n              remaining = 0;\n              updateTimerLabel();\n            } else {\n              startTimer(getSlideTime(slide));\n            }\n          });\n\n          const scoreboard = stage.querySelector('.quiz-scoreboard');\n          if (scoreboard) {\n            scoreboard.addEventListener('click', (event) => {\n              const button = event.target.closest('.score-btn');\n              if (!button) return;\n              const teamCard = button.closest('.team-card');\n              if (!teamCard) return;\n              const teamName = teamCard.querySelector('.team-name')?.textContent || 'team';\n              const scoreEl = teamCard.querySelector('[data-role=\"score\"]');\n              let score = Number(teamCard.dataset.score || '0');\n              score += 1;\n              teamCard.dataset.score = score;\n              if (scoreEl) {\n                scoreEl.textContent = score;\n              }\n              teamCard.classList.remove('bursting');\n              void teamCard.offsetWidth;\n              teamCard.classList.add('bursting');\n              button.setAttribute('aria-label', 'Add a point to ' + teamName + ' (current: ' + score + ')');\n            });\n\n            scoreboard.addEventListener('animationend', (event) => {\n              if (event.target.classList.contains('burst')) {\n                event.target.parentElement?.classList.remove('bursting');\n              }\n            });\n          }\n\n          activateSlide(activeIndex);\n        })();\n      </script>\n    \n    </section>\n  </div>\n</body>\n</html>\n"
}